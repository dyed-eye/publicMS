# -*- coding: utf-8 -*-
"""Движение с ускорением.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1pFgnJ8WCbO3SnJGx1Rt2Xbe6d18s3FzS

# **Одномерное прямолинейное движение**
"""

#@title Параметры моделирования движения с постоянным ускорением
import matplotlib.pyplot as plt
import numpy as np

plt.rcParams.update({"font.family": "serif", "font.cursive": ["Comic Neue", "Comic Sans MS"]})
#@markdown Выберите интервал времени $t$
t = 25 #@param {type:"slider", min:5, max:100, step:5}
#@markdown Выберите начальную координату $x_0$
x0 = -80 #@param {type:"slider", min:-100, max:100, step:5}
#@markdown Выберите начальную скорость $v_0$
v0 = -25 #@param {type:"slider", min:-100, max:100, step:5}
#@markdown Выберите ускорение $a$
a = 5 #@param {type:"slider", min:-100, max:100, step:5}

xf = x0 + v0 * t + a/2 * (t ** 2)
print(f"Теоретически полученное значение координаты x материальной точки: {xf}")
n = (int(t) + 1) * 1000
time = np.linspace(0, t, n)
dt = time[1]
coords = np.zeros(n)
velos = np.zeros(n)
coords[0] = x0
velos[0] = v0
accels = [a]
for i in range(1, n):
    velos[i] = velos[i - 1] + a * dt
    coords[i] = coords[i - 1] + velos[i] * dt
    accels.append(a)
fig, ax = plt.subplots(1, 3, figsize=(5, 5))
fig.set_figheight(6)
fig.set_figwidth(16)
fig.suptitle('Кинематика материальной точки, движущейся с постоянным ускорением $a_0$', fontsize=16)
ax[0].set_title('Координата $x$ материальной точки', fontsize=13)
ax[1].set_title('Скорость $v_x$ материальной точки', fontsize=13)
ax[2].set_title('Ускорение $a_x$ материальной точки', fontsize=13)
ax[0].plot(time, coords)
ax[1].plot(time, velos)
ax[2].plot(time, accels)
ax[0].scatter([time[0], time[-1]], [coords[0], coords[-1]])
ax[1].scatter([time[0], time[-1]], [velos[0], velos[-1]])
ax[2].scatter([time[0], time[-1]], [accels[0], accels[-1]])
ax[0].set_ylabel('Расстояние $x$ по оси $x$, м', fontsize=13)
ax[1].set_ylabel('Скорость $v_x$ по оси $x$, м/с', fontsize=13)
ax[2].set_ylabel('Ускорение $a_x$ вдоль оси $x$, м/c$^2$', fontsize=13)
for i in range(3):
    ax[i].axis('tight')
    ax[i].grid('--', alpha=0.5)
    ax[i].set_xlabel('Время, с', fontsize=13)
fig.tight_layout(pad=3.0)
plt.show()

#@title Параметры моделирования движения с ускорением, зависящим от времени таким образом: $a(t)=1+2^{\;\eta t}$

import matplotlib.pyplot as plt
import numpy as np

plt.rcParams.update({"font.family": "serif", "font.cursive": ["Comic Neue", "Comic Sans MS"]})
#@markdown Выберите интервал времени $t$
t = 10 #@param {type:"slider", min:5, max:100, step:5}
#@markdown Выберите начальную координату $x_0$
x0 = 10 #@param {type:"slider", min:-100, max:100, step:5}
#@markdown Выберите начальную скорость $v_0$
v0 = -20 #@param {type:"slider", min:-100, max:100, step:5}
#@markdown Выберите начальное ускорение $a_0$
a0 = -10 #@param {type:"slider", min:-100, max:100, step:5}
#@markdown Выберите степенной коэффициент $\eta$
eta = -0.05 #@param {type:"slider", min:-1, max:1, step:0.05}

n = (int(t) + 1) * 1000
time = np.linspace(0, t, n)
dt = time[1]
coords = np.zeros(n)
velos = np.zeros(n)
accels = np.zeros(n)
coords[0] = x0
velos[0] = v0
accels[0] = 2
for i in range(1, n):
    accels[i] = 1 + 2 ** (eta * time[i])
    velos[i] = velos[i - 1] + accels[i] * dt
    coords[i] = coords[i - 1] + velos[i] * dt
fig, ax = plt.subplots(1, 3, figsize=(5, 5))
fig.set_figheight(6)
fig.set_figwidth(16)
fig.suptitle('Кинематика материальной точки, движущейся '
              'с ускорением, зависящим от времени:\n'
              '$a\;=\;1\;+\;2^{\eta t},\;\;$'
              f'$\eta\;=\;${eta}', fontsize=14)
ax[0].plot(time, coords)
ax[1].plot(time, velos)
ax[2].plot(time, accels)
ax[0].scatter([time[0], time[-1]], [coords[0], coords[-1]])
ax[1].scatter([time[0], time[-1]], [velos[0], velos[-1]])
ax[2].scatter([time[0], time[-1]], [accels[0], accels[-1]])
ax[0].set_ylabel('Расстояние $x$ по оси $x$, м', fontsize=13)
ax[1].set_ylabel('Скорость $v_x$ по оси $x$, м/с', fontsize=13)
ax[2].set_ylabel('Ускорение $a_x$ вдоль оси $x$, м/c$^2$', fontsize=13)
for i in range(3):
    ax[i].axis('tight')
    ax[i].grid('--', alpha=0.5)
    ax[i].set_xlabel('Время, с', fontsize=13)
    ax[i].set_ylim(min(min(coords), min(velos), min(accels)),
                    max(max(coords), max(velos), max(accels)))
fig.tight_layout(pad=3.0)
plt.show()

"""Движение с постоянным рывком"""

#@title Параметры моделирования движения с постоянным рывком (ускорение ускорения) $j$.
import matplotlib.pyplot as plt
import numpy as np

plt.rcParams.update({"font.family": "serif", "font.cursive": ["Comic Neue", "Comic Sans MS"]})
#@markdown Выберите интервал времени $t$
t = 15 #@param {type:"slider", min:5, max:100, step:5}
#@markdown Выберите начальную координату $x_0$
x0 = -25 #@param {type:"slider", min:-100, max:100, step:5}
#@markdown Выберите начальную скорость $v_0$
v0 = -5 #@param {type:"slider", min:-100, max:100, step:5}
#@markdown Выберите начальное ускорение $a_0$
a0 = -30 #@param {type:"slider", min:-100, max:100, step:5}
#@markdown Выберите рывок $j$
j = 5 #@param {type:"slider", min:-100, max:100, step:5}

xf = x0 + v0 * t + a0 / 2 * t ** 2 + j / 6 * t ** 3
print(f"Теоретически полученное значение координаты x материальной точки: {xf}")
n = (int(t) + 1) * 1000
time = np.linspace(0, t, n)
dt = time[1]
coords = np.zeros(n)
velos = np.zeros(n)
accels = np.zeros(n)
coords[0] = x0
velos[0] = v0
accels[0] = a0
jerks = [j]
for i in range(1, n):
    accels[i] = accels[i - 1] + j * dt
    velos[i] = velos[i - 1] + accels[i] * dt
    coords[i] = coords[i - 1] + velos[i] * dt
    jerks.append(j)
fig, ax = plt.subplots(1, 4, figsize=(5, 5))
fig.set_figheight(5)
fig.set_figwidth(18)
fig.suptitle('Кинематика материальной точки, движущейся с постоянным рывком $j$', fontsize=14)
ax[0].plot(time, coords)
ax[1].plot(time, velos)
ax[2].plot(time, accels)
ax[3].plot(time, jerks)
ax[0].scatter([time[0], time[-1]], [coords[0], coords[-1]])
ax[1].scatter([time[0], time[-1]], [velos[0], velos[-1]])
ax[2].scatter([time[0], time[-1]], [accels[0], accels[-1]])
ax[3].scatter([time[0], time[-1]], [jerks[0], jerks[-1]])
ax[0].set_ylabel('Расстояние $x$ по оси $x$, м', fontsize=13)
ax[1].set_ylabel('Скорость $v_x$ по оси $x$, м/с', fontsize=13)
ax[2].set_ylabel('Ускорение $a_x$ вдоль оси $x$, м/c$^2$', fontsize=13)
ax[3].set_ylabel('Рывок $j_x$ вдоль оси $x$, м/c$^3$', fontsize=13)
for i in range(4):
    ax[i].axis('tight')
    ax[i].grid('--', alpha=0.5)
    ax[i].set_xlabel('Время, с', fontsize=13)
fig.tight_layout(pad=3.0)
plt.show()

#@title Параметры моделирования движения тела с разным постоянным ускорением на трёх временных участках
import matplotlib.pyplot as plt
import numpy as np

plt.rcParams.update({"font.family": "serif", "font.cursive": ["Comic Neue", "Comic Sans MS"]})
#@markdown Выберите начальную координату $x_0$
x0 = 0 #@param {type:"slider", min:-100, max:100, step:5}
#@markdown Выберите начальную скорость $v_0$
v0 = 0 #@param {type:"slider", min:-100, max:100, step:5}
#@markdown Выберите 1 интервал времени $t_1$
t1 = 10 #@param {type:"slider", min:5, max:100, step:5}
#@markdown Выберите 2 интервал времени $t_2$
t2 = 20 #@param {type:"slider", min:5, max:100, step:5}
#@markdown Выберите 3 интервал времени $t_3$
t3 = 10 #@param {type:"slider", min:5, max:100, step:5}
#@markdown Выберите 1 ускорение $a_1$
a1 = 10 #@param {type:"slider", min:-10, max:10, step:0.5}
#@markdown Выберите 2 ускорение $a_2$
a2 = -10 #@param {type:"slider", min:-10, max:10, step:0.5}
#@markdown Выберите 3 ускорение $a_3$
a3 = 10 #@param {type:"slider", min:-10, max:10, step:0.5}
A = [a1, a2, a3]
T = [t1, t2, t3]
fig, ax = plt.subplots(1, 3, figsize=(5, 5))
fig.set_figheight(6)
fig.set_figwidth(16)
fig.suptitle('Кинематика материальной точки, движущейся с разными постоянными ускорениями $a$ на трёх временных интервалах', fontsize=16)
ax[0].set_title('Координата $x$ материальной точки', fontsize=13)
ax[1].set_title('Скорость $v_x$ материальной точки', fontsize=13)
ax[2].set_title('Ускорение $a_x$ материальной точки', fontsize=13)
X0 = [x0]
V0 = [v0]
T0 = [0]
for i in range(3):
  x0 = X0[-1]
  v0 = V0[-1]
  t0 = T0[-1]
  a = A[i]
  t = T[i]
  n = (int(t) + 1) * 1000
  time = np.linspace(t0, t+t0, n)
  dt = time[1] - time[0]
  coords = np.zeros(n)
  velos = np.zeros(n)
  coords[0] = x0
  velos[0] = v0
  accels = [a]
  for i in range(1, n):
      velos[i] = velos[i - 1] + a * dt
      coords[i] = coords[i - 1] + velos[i] * dt
      accels.append(a)
  ax[0].plot(time, coords)
  ax[1].plot(time, velos)
  ax[2].plot(time, accels)
  ax[0].scatter([time[0], time[-1]], [coords[0], coords[-1]], c='k')
  ax[1].scatter([time[0], time[-1]], [velos[0], velos[-1]], c='k')
  ax[2].scatter([time[0], time[-1]], [accels[0], accels[-1]], c='k')
  X0.append(coords[-1])
  V0.append(velos[-1])
  T0.append(time[-1])
ax[0].set_ylabel('Расстояние $x$ по оси $x$, м', fontsize=13)
ax[1].set_ylabel('Скорость $v_x$ по оси $x$, м/с', fontsize=13)
ax[2].set_ylabel('Ускорение $a_x$ вдоль оси $x$, м/c$^2$', fontsize=13)
for i in range(3):
    ax[i].axis('tight')
    ax[i].grid('--', alpha=0.5)
    ax[i].set_xlabel('Время, с', fontsize=13)
fig.tight_layout(pad=3.0)
print(f"Численно полученное значение координаты x материальной точки в конечный момент времени: {coords[-1]:.2f}")
plt.show()